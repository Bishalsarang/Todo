{"version":3,"sources":["components/Add/index.js","components/Body/index.js","components/TodoItem/index.js","components/Todos/index.js","components/Column/index.js","components/Search/index.js","components/Header/index.js","components/BottomNavButton/index.js","components/BottomNav/index.js","App.js","index.js"],"names":["Add","props","onSubmit","e","preventDefault","state","title","addToDo","id","uuidv4","description","isComplete","priority","setState","addItem","target","value","this","style","textAlign","className","type","placeholder","padding","width","onChange","Component","Body","children","taskWrapperStyle","margin","marginBottom","titleStyle","display","completedStyle","textDecoration","TodoItem","onCheckBoxChanged","toggleCompleted","todo","onDelete","deleteToDo","handlePriority","changePriority","background","onClick","icon","faCheck","cursor","faEdit","faTrashAlt","Todos","todos","map","key","Column","filteredTodos","displayType","filter","toUpperCase","Search","setSearch","searchToDo","search","Header","BottomNavButton","handleClick","visibility","size","BottomNav","handleDisplayType","faClipboardList","faCheckSquare","faTimes","App","searchText","filteredToDos","console","log","toLowerCase","includes","item","remaining","newToDos","handleVisibility","newVisibility","newIndex","priorities","indexOf","length","JSON","parse","localStorage","getItem","setItem","stringify","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9c9cbff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class Add extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: '',\r\n    };\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.title) {\r\n      this.props.addToDo({\r\n        id: uuidv4(),\r\n        title: this.state.title,\r\n        description: 'This is a description',\r\n        isComplete: false,\r\n        priority: 'low',\r\n      });\r\n    }\r\n\r\n    this.setState({\r\n      title: '',\r\n    });\r\n  };\r\n\r\n  addItem = e => {\r\n    this.setState({\r\n      title: e.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        onSubmit={this.onSubmit}\r\n        style={{ textAlign: 'center' }}\r\n        className=\"container\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Todo\"\r\n          className=\"neumo-element\"\r\n          style={{ padding: '6px', width: '100%', textAlign: 'center' }}\r\n          value={this.state.title}\r\n          onChange={this.addItem}\r\n        />\r\n        <input className=\"neumo-element hide\" type=\"submit\" value=\"submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Body extends Component {\r\n  render() {\r\n    return <div className=\"container\">{this.props.children}</div>;\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt, faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './style.css';\r\n\r\nlet taskWrapperStyle = {\r\n  margin: '0px auto',\r\n  marginBottom: '10px',\r\n  padding: '10px 0px',\r\n};\r\n\r\nconst titleStyle = {\r\n  display: 'inline-block',\r\n};\r\n\r\nconst completedStyle = {\r\n  textDecoration: 'line-through',\r\n};\r\n\r\nexport default class TodoItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isComplete: this.props.todo.isComplete,\r\n    };\r\n  }\r\n\r\n  onCheckBoxChanged = e => {\r\n    // Change State of Parent\r\n    this.props.toggleCompleted(this.props.todo.id);\r\n    this.setState({\r\n      isComplete: !this.state.isComplete,\r\n    });\r\n  };\r\n\r\n  onDelete = () => {\r\n    this.props.deleteToDo(this.props.todo.id);\r\n  };\r\n\r\n  handlePriority = () => {\r\n    this.props.changePriority(this.props.todo.id);\r\n  };\r\n\r\n  render() {\r\n    const { title } = this.props.todo;\r\n\r\n    return (\r\n      <div\r\n        className=\"task-wrapper neumo-element \"\r\n        style={\r\n          this.props.todo.isComplete\r\n            ? { ...taskWrapperStyle, background: '#dddde4' }\r\n            : taskWrapperStyle\r\n        }\r\n      >\r\n        <div className=\"info\">\r\n          <div className=\"check\" onClick={this.onCheckBoxChanged}>\r\n            <div\r\n              className={\r\n                this.props.todo.isComplete ? 'check__icon' : 'check__icon hide'\r\n              }\r\n            >\r\n              <FontAwesomeIcon icon={faCheck} />\r\n            </div>\r\n          </div>\r\n\r\n          <p\r\n            style={\r\n              this.props.todo.isComplete\r\n                ? { ...titleStyle, ...completedStyle }\r\n                : { ...titleStyle }\r\n            }\r\n          >\r\n            {title}{' '}\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"controls\">\r\n          <div\r\n            className={`priority neumo-element ${this.props.todo.priority}`}\r\n            onClick={this.handlePriority}\r\n            style={{ cursor: 'pointer' }}\r\n          >\r\n            {this.props.todo.priority}\r\n          </div>\r\n          <button>\r\n            <FontAwesomeIcon icon={faEdit} />\r\n          </button>\r\n\r\n          <button onClick={this.onDelete}>\r\n            <FontAwesomeIcon icon={faTrashAlt} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport TodoItem from '../TodoItem';\r\n\r\nexport default class Todos extends Component {\r\n  render() {\r\n    return this.props.todos.map(todo => (\r\n      <TodoItem\r\n        key={todo.id}\r\n        todo={todo}\r\n        toggleCompleted={this.props.toggleCompleted}\r\n        deleteToDo={this.props.deleteToDo}\r\n        changePriority={this.props.changePriority}\r\n      />\r\n    ));\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Todos from '../Todos';\r\n\r\nimport './style.css';\r\n\r\nexport default class Column extends Component {\r\n  filteredTodos = () => {\r\n    if (this.props.displayType === 'completed') {\r\n      return this.props.todos.filter(todo => todo.isComplete);\r\n    }\r\n\r\n    if (this.props.displayType === 'remaining') {\r\n      return this.props.todos.filter(todo => !todo.isComplete);\r\n    }\r\n\r\n    return this.props.todos;\r\n  };\r\n\r\n  render() {\r\n    const { displayType } = this.props;\r\n    return (\r\n      <div className=\"column\" id={displayType}>\r\n        <h2 className=\"column__header\">{displayType.toUpperCase()} TASKS</h2>\r\n        <Todos\r\n          todos={this.filteredTodos()}\r\n          toggleCompleted={this.props.toggleCompleted}\r\n          deleteToDo={this.props.deleteToDo}\r\n          changePriority={this.props.changePriority}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: '',\r\n    };\r\n  }\r\n\r\n  setSearch = e => {\r\n    this.props.searchToDo(e.target.value);\r\n    this.setState({\r\n      search: e.target.value,\r\n    });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.searchToDo(this.state.search);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"container\" onSubmit={this.onSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={this.state.search}\r\n          placeholder=\"Search\"\r\n          onChange={this.setSearch}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\n/**\r\n *\r\n * @param {string} props\r\n */\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"header\">{title}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './style.css';\r\n\r\nconst BottomNavButton = ({ handleClick, visibility, icon }) => {\r\n  return (\r\n    <button\r\n      className=\"bottom-nav__button neumo-element\"\r\n      onClick={() => handleClick(visibility)}\r\n    >\r\n      <FontAwesomeIcon icon={icon} size=\"2x\" />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BottomNavButton;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  faClipboardList,\r\n  faCheckSquare,\r\n  faTimes,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport BottomNavButton from '../BottomNavButton';\r\n\r\nimport './style.css';\r\n\r\nexport default class BottomNav extends Component {\r\n  handleClick = visibility => {\r\n    this.props.handleDisplayType(visibility);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bottom-nav\">\r\n        <div className=\"bottom-nav__wrapper container\">\r\n          <div>\r\n            <BottomNavButton\r\n              visibility=\"all\"\r\n              handleClick={this.handleClick}\r\n              icon={faClipboardList}\r\n            />\r\n            <span>All</span>\r\n          </div>\r\n\r\n          <div>\r\n            <BottomNavButton\r\n              visibility=\"completed\"\r\n              handleClick={this.handleClick}\r\n              icon={faCheckSquare}\r\n            />\r\n            <span>Completed</span>\r\n          </div>\r\n\r\n          <div>\r\n            <BottomNavButton\r\n              visibility=\"remaining\"\r\n              handleClick={this.handleClick}\r\n              icon={faTimes}\r\n            />\r\n            <span>Remaining</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\n// Import Components\r\nimport Add from './components/Add';\r\nimport Body from './components/Body';\r\nimport Column from './components/Column';\r\nimport Search from './components/Search';\r\nimport Header from './components/Header';\r\nimport BottomNav from './components/BottomNav';\r\n\r\n// Import Global Styles\r\nimport './css/App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = JSON.parse(localStorage.getItem('todo')) || {\r\n      todos: [],\r\n      filteredToDos: [],\r\n      visibility: 'all',\r\n    };\r\n\r\n    this.priorities = ['low', 'med', 'high']; // Available Task Priorities\r\n  }\r\n\r\n  searchToDo = (searchText = '') => {\r\n    const filteredToDos = this.state.todos.filter(todo => {\r\n      console.log(todo.title, searchText);\r\n      console.log(todo.title.toLowerCase().includes(searchText.toLowerCase()));\r\n      return todo.title.toLowerCase().includes(searchText.toLowerCase());\r\n      // ); todo.title.toLowerCase().includes(searchText.toLowerCase());\r\n    });\r\n\r\n    this.setState({\r\n      filteredToDos: filteredToDos,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Add TodoItem to Todos\r\n   * @param {object} item TodoItem Object with key [id, title, description, completed, priority]\r\n   *\r\n   */\r\n  addToDo = item => {\r\n    // Add Recent Items at top\r\n    this.setState({\r\n      todos: [item, ...this.state.todos],\r\n      filteredToDos: [item, ...this.state.todos],\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Delete TodoItem from Todos\r\n   * @param {string} id unique id associated with  task\r\n   */\r\n  deleteToDo = id => {\r\n    const remaining = this.state.todos.filter(todo => {\r\n      return todo.id !== id;\r\n    });\r\n\r\n    this.setState({\r\n      todos: remaining,\r\n      filteredToDos: remaining,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Toggle isCompleted Status of Todo\r\n   * @param {string} id unique id associated with  task\r\n   */\r\n  toggleCompleted = id => {\r\n    let newToDos = this.state.todos.map(todo => {\r\n      todo.isComplete = todo.id === id ? !todo.isComplete : todo.isComplete;\r\n      return todo;\r\n    });\r\n\r\n    this.setState({\r\n      todos: newToDos,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handle Which column is to be made visible\r\n   * @param {string} newVisibility  newVisibility value ['completed', 'remaining', 'all']\r\n   *\r\n   */\r\n  handleVisibility = newVisibility => {\r\n    this.setState({\r\n      visibility: newVisibility,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Change priority of todo with id\r\n   * @param {string} id Unique id associated with todo\r\n   */\r\n  changePriority = id => {\r\n    let newToDos = this.state.todos.map(todo => {\r\n      if (todo.id === id) {\r\n        let newIndex =\r\n          (this.priorities.indexOf(todo.priority) + 1) % this.priorities.length;\r\n        todo.priority = this.priorities[newIndex];\r\n      }\r\n\r\n      return todo;\r\n    });\r\n\r\n    this.setState({\r\n      todos: newToDos,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Save current progress to local storage\r\n   */\r\n  componentDidUpdate() {\r\n    localStorage.setItem('todo', JSON.stringify(this.state)); // Save State to Local Storage\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Header title=\"Yet Another Todo\" />\r\n        <Body>\r\n          <Search searchToDo={this.searchToDo} />\r\n          <Add addToDo={this.addToDo} />\r\n\r\n          {this.state.todos.length ? (\r\n            <Column\r\n              todos={this.state.filteredToDos}\r\n              toggleCompleted={this.toggleCompleted}\r\n              deleteToDo={this.deleteToDo}\r\n              changePriority={this.changePriority}\r\n              displayType={this.state.visibility}\r\n            />\r\n          ) : (\r\n            <p className=\"column--empty neumo-element\">Hurray Nothing to do</p>\r\n          )}\r\n        </Body>\r\n\r\n        <BottomNav\r\n          todos={this.state.filteredToDos}\r\n          handleDisplayType={this.handleVisibility}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}